package arrayBribeInQueque;

import java.util.Arrays;
import java.util.Scanner;


public class Main {
    public static void main(String[] args) {
        String str

        String[] qItems = str.split(" ");
        int[] arr = new int[qItems.length];
        for (int i = 0; i < qItems.length; i++) {
            int qItem = Integer.parseInt(qItems[i]);
            arr[i] = qItem;
        }

        minimumBribes(arr);
        System.out.println();
    }

    // Complete the minimumBribes function below.
    private static void minimumBribes(int[] q) {
        int counter = 0;
        for (int i = 0; i < q.length - 1; i++) {
            if (q[i] - i < 4) {
                if (q[i] - q[i + 1] > 0) {
                    int qTemp = q[i + 1];
                    q[i + 1] = q[i];
                    q[i] = qTemp;
                    counter++;
                    i=Math.max(-1,i-2);
                }
            } else {
                System.out.println("Too chaotic");
                return;
            }
        }
        System.out.println(Arrays.toString(q));
        System.out.println(counter);

    }
}
